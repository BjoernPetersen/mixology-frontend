name: Main
on:
  push:
    branches: [main]
  pull_request: {}

jobs:
  check-format:
    name: Check Format
    runs-on: ubuntu-latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v4
      - uses: asdf-vm/actions/install@v3
      - name: Check lib formatting
        run: dart format lib --set-exit-if-changed --output=none

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v4
      - uses: asdf-vm/actions/install@v3
      - name: Get dependencies
        run: flutter pub get
      - name: Run code generation
        run: dart run build_runner build
      - name: Run Analysis
        run: flutter analyze --fatal-infos

  build-web-package:
    name: Build Web Package
    runs-on: ubuntu-latest
    needs: [check-format, lint]
    steps:
      - name: Check out repo
        uses: actions/checkout@v4
        with:
          lfs: true
      - uses: asdf-vm/actions/install@v3
      - name: Get dependencies
        run: flutter pub get
      - name: Run code generation
        run: dart run build_runner build
      - name: Build web package
        run: flutter build web
      - name: Store build result
        uses: actions/upload-artifact@v3
        with:
          name: web-app
          path: build/web

  build-container-image:
    runs-on: ubuntu-latest
    needs: build-web-package
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/arm64
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/arm64
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v4
      - name: Check out repo
        uses: actions/checkout@v4
      - name: Pull Artifacts
        uses: actions/download-artifact@v3
        with:
          name: web-app
          path: build/web
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}
      - name: Build container image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/arm64
          push: ${{ github.ref_name == github.event.repository.default_branch }}
          tags: "ghcr.io/${{ env.GITHUB_REPOSITORY_OWNER_PART_SLUG }}/${{ env.GITHUB_REPOSITORY_NAME_PART_SLUG }}:${{ github.sha }}"

  deploy:
    runs-on: ubuntu-latest
    if: github.ref_name == github.event.repository.default_branch
    needs:
      - build-container-image
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - run: git push origin main:release

  clean:
    concurrency: cleanup
    needs: [ deploy ]
    uses: BlindfoldedSurgery/actions-container/.github/workflows/clean.yml@v3
