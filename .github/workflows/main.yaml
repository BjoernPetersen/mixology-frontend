name: Main
on:
  push:
    branches: [main]
  pull_request: {}

jobs:
  check-format:
    name: Check Format
    runs-on: ubuntu-latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v4
      - uses: asdf-vm/actions/install@v3
      - name: Check lib formatting
        run: dart format lib --set-exit-if-changed --output=none

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v4
      - uses: asdf-vm/actions/install@v3
      - name: Get dependencies
        run: flutter pub get
      - name: Run code generation
        run: dart run build_runner build
      - name: Run Analysis
        run: flutter analyze --fatal-infos

  build-web-package:
    name: Build Web Package
    runs-on: ubuntu-latest
    needs: [check-format, lint]
    steps:
      - name: Check out repo
        uses: actions/checkout@v4
        with:
          lfs: true
      - uses: asdf-vm/actions/install@v3
      - name: Get dependencies
        run: flutter pub get
      - name: Run code generation
        run: dart run build_runner build
      - name: Build web package
        run: flutter build web
      - name: Store build result
        uses: actions/upload-artifact@v3
        with:
          name: web-app
          path: build/web

  build-container-image:
    name: Build Container Package
    runs-on: ubuntu-latest
    needs: build-web-package
    if: success() && github.event_name == 'pull_request'
    steps:
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v4
      - name: Check out repo
        uses: actions/checkout@v4
      - name: Pull Artifacts
        uses: actions/download-artifact@v3
        with:
          name: web-app
          path: build/web
      - name: Build container image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: "ghcr.io/${{ env.GITHUB_REPOSITORY_OWNER_PART_SLUG }}/${{ env.GITHUB_REPOSITORY_NAME_PART_SLUG }}:${{ github.sha }}"

  push-container-image:
    name: Build & Push Container Package
    runs-on: ubuntu-latest
    needs: build-web-package
    if: success() && github.ref_name == github.event.repository.default_branch
    steps:
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v4
      - name: Check out repo
        uses: actions/checkout@v4
      - name: Pull Artifacts
        uses: actions/download-artifact@v3
        with:
          name: web-app
          path: build/web
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}
      - name: Build container image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: "ghcr.io/${{ env.GITHUB_REPOSITORY_OWNER_PART_SLUG }}/${{ env.GITHUB_REPOSITORY_NAME_PART_SLUG }}:${{ github.sha }}"

  deploy:
    runs-on: ubuntu-latest
    needs:
      - push-container-image
    concurrency: production
    steps:
      - uses: actions/checkout@v4
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v4
      - name: Substitute environment variables in values.yaml
        run: "envsubst < values.yaml > values_sub.yaml && mv values_sub.yaml values.yaml"
        env:
          IMAGE_NAME: "ghcr.io/${{ env.GITHUB_REPOSITORY_OWNER_PART_SLUG }}/${{ env.GITHUB_REPOSITORY_NAME_PART_SLUG }}"
      - uses: WyriHaximus/github-action-helm3@v3
        with:
          exec: helm upgrade frontend . --install --namespace=mixology --atomic
          kubeconfig: '${{ secrets.KUBECONFIG_RAW }}'

  clean:
    runs-on: ubuntu-latest
    concurrency: cleanup
    continue-on-error: true
    needs: [ deploy ]
    steps:
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v4
      - name: Clean up old container images
        uses: actions/delete-package-versions@v4
        with:
          package-name: ${{ env.GITHUB_REPOSITORY_NAME_PART_SLUG }}
          package-type: container
          min-versions-to-keep: 10
